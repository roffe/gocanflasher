package t8

import (
	"context"
	"log"
	"time"

	"github.com/roffe/gocan/pkg/ecu/t8sec"
	"github.com/roffe/gocan/pkg/gmlan"
)

// Valid levels are 0x01, 0xFB, 0xFD
func (t *Client) RequestSecurityAccess(ctx context.Context, accesslevel byte, delay time.Duration) error {
	seed, err := t.gm.SecurityAccessRequestSeed(ctx, 0x7E0, 0x7E8, accesslevel)
	if err != nil {
		return err
	}

	if seed[0] == 0x00 && seed[1] == 0x00 {
		log.Println("Security access already granted")
		return nil
	}

	secondsToWait := delay.Milliseconds() / 1000
	for secondsToWait > 0 {
		time.Sleep(1 * time.Second)
		gmlan.New(t.c).TesterPresentNoResponseAllowed()
		secondsToWait--
	}

	high, low := t8sec.CalculateAccessKey(seed, accesslevel)

	if err := t.gm.SecurityAccessSendKey(ctx, 0x7E0, 0x7E8, accesslevel, high, low); err != nil {
		return err
	}

	return nil
}
